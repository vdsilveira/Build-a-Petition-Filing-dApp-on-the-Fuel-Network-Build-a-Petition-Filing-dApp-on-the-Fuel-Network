"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/cli.ts
var cli_exports = {};
__export(cli_exports, {
  run: () => run
});
module.exports = __toCommonJS(cli_exports);
var import_cli = require("@fuel-ts/abi-typegen/cli");
var import_versions = require("@fuel-ts/versions");
var import_cli2 = require("@fuel-ts/versions/cli");
var import_commander = require("commander");
function run(argv) {
  const program = new import_commander.Command();
  program.name("fuels");
  program.version(import_versions.versions.FUELS);
  program.command("versions").description("check for version incompatibilities").action(import_cli2.runVersions);
  const typegen = program.command("typegen").description(`generate typescript from contract abi json files`);
  (0, import_cli.configureCliOptions)(typegen);
  program.parse(argv);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  run
});
//# sourceMappingURL=cli.js.map