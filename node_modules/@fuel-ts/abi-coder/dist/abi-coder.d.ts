import type { DecodedValue, InputValue, Coder } from './coders/abstract-coder';
import type { JsonAbi, JsonAbiArgument } from './json-abi';
export declare abstract class AbiCoder {
    static getCoder(abi: JsonAbi, argument: JsonAbiArgument): Coder;
    static encode(abi: JsonAbi, argument: JsonAbiArgument, value: InputValue): Uint8Array;
    static decode(abi: JsonAbi, argument: JsonAbiArgument, data: Uint8Array, offset: number): [DecodedValue | undefined, number];
    private static getCoderImpl;
    private static getCoders;
}
//# sourceMappingURL=abi-coder.d.ts.map